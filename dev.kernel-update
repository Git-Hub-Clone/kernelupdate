#!/bin/bash

############################################################################################################
#
# Kernel Update
# Autor: Aleritty <aleritty//#AT#//aleritty.net> http://www.aleritty.net
#    Questo script permette di tenere sotto controllo il proprio kernel
#    Aggiornando, pulendo e facendo altre operazioni
#
#    Esecuzione:
#        ~$ sudo ./kernel-update [ -h --help]
#
#    Per uscire dal programma premere il tasto "q"
#
#    Ricordarsi di dare allo script i permessi di esecuzione con il comando:
#        ~$ chmod +x kernel-update
#
#
#    Questo script è rilasciato sotto licenza creative commons: 
#       http://creativecommons.org/licenses/by-nc-sa/2.5/it/
#   E' quindi possibile: riprodurre, distribuire, comunicare al pubblico, 
#   esporre in pubblico, eseguire, modificare quest'opera
#   Alle seguenti condizioni:
#   Attribuzione. Devi attribuire la paternità dell'opera nei modi indicati 
#   dall'autore o da chi ti ha dato l'opera in licenza e in modo tale da non 
#   suggerire che essi avallino te o il modo in cui tu usi l'opera.
#
#   Non commerciale. Non puoi usare quest'opera per fini commerciali.
#
#   Condividi allo stesso modo. Se alteri o trasformi quest'opera, o se la usi 
#   per crearne un'altra, puoi distribuire l'opera risultante solo con una 
#   licenza identica o equivalente a questa.
#
#   Questo script agisce su indicazioni e conferma dell'utente, pertanto 
#   l'autore non si ritiene responsabile di qualsiasi danno o perdita di dati 
#   derivata dall'uso improprio o inconsapevole di questo script!

VERSION=0.1

notifica(){
    if [ -f "/usr/bin/notify-send" ]; then
        notify-send -i  preferences-system-notifications "Kernel Update" "$1"
    elif [ -f "/usr/bin/kdialog" ];then
        kdialog --title="Kernel Update" --msgbox "$1"
    elif [ -f "/usr/bin/zenity" ];then
        zenity --info --title="Kernel Update" --text="$1"
    elif [ -f "/usr/bin/xmessage" ];then
        xmessage -center "$1"
    fi
        echo
        echo "$1"
        echo
}

if [[ $EUID -ne 0 ]]; then
   notifica "Devi avere i privilegi da superutente per lanciarmi" 1>&2
   exit 1
fi

autorizeddistro=['Ubuntu','LinuxMint']

distribid=$(cat /etc/lsb-release | grep DISTRIB_ID)
if ! [[ ${autorizeddistro[*]} =~ "${distribid:11}" ]]; then
    echo "Questo script installa i kernel di ubuntu, se lo vuoi lanciare su un'altra distribuzione lo fai a tuo rischio e pericolo di rompere tutto... Pertanto ti assumi anche l'onere di modificare lo script in modo che ti consenta di farlo, se non ne sei capace vuol dire che non dovresti nemmeno installare un kernel non progettato per la tua distribuzione."
    exit 1
fi

upgradescript(){
    gitversion=$(curl -L -s https://github.com/aleritty/kernelupdate/raw/master/dev.kernel-update | grep "^VERSION=")
    if [[ ${gitversion:8} > $VERSION ]];then
        echo 
        read -p "La nuova versione "${gitversion:8}" è disponibile, vuoi aggiornare? [s]/n" -n 1 -s sicupd
        if [[ "$sicupd" != "n" ]]; then
            if $(wget https://github.com/aleritty/kernelupdate/raw/master/kernel-update -O /tmp/kernel-updatescriptdown);then
                if [ -e "/usr/bin/kernel-update" ];then
                    read -p "Aggiorno il binario di sistema? [s]/n" -n 1 -s sicinst
                    if [[ "$sicupd" != "n" ]]; then
                        cp /tmp/kernel-updatescriptdown /usr/bin/kernel-update
                        notifica "Binario di sistema aggiornato"
                    else
                        notifica "Nessun aggiornamento effettuato"
                    fi

                    read -p "Premi un tasto per continuare" -n 1
                else
                    read -p "Dove metto il file con la nuova versione? (percorso assoluto)" -s locatinstall
                    cp /tmp/kernel-updatescriptdown $locatinstall
                fi
                notifica "Ricordati di uscire e rilanciare lo script per avere la nuova versione"
                read -p "Premi un tasto per continuare" -n 1
            fi
        else
            notifica "Per questa volta salto l'aggiornamento"
            read -p "Premi un tasto per continuare" -n 1
        fi
    else
        echo "Nessun aggiornamento trovato, hai l'ultima versione dello script"
    fi
}
